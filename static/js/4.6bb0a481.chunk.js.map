{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogsItem.jsx","Components/Dialogs/DialogMessage/DialogsMessage.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","Class","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","newMessagetext","validate","required","cols","rows","placeholder","sendBtn","Dialogs","state","dialogsPage","dialogElements","dialogs","map","key","messagesElements","messages","dialogWrapper","dialog_items","newMessageBlock","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageBody","sendMessageCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,gBAAkB,iCAAiC,eAAiB,gCAAgC,QAAU,2B,sFCa1XC,EAVI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,QACvC,kBAAC,IAAD,CAAUC,GAAI,YAAcL,EAAMM,IAAKN,EAAMO,QCI1CC,EAPC,SAACR,GACb,OACI,yBAAKC,UAAWC,IAAMO,SAAUT,EAAMS,U,iCCgDxCC,EAAcC,YAAiB,IA2B/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAzBL,SAACb,GACpB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BAEI,kBAACC,EAAA,EAAD,CACIC,UAAWC,IACXZ,KAAO,iBACPN,UAAYC,IAAMkB,eAClBC,SAAU,CAAEC,IAAUZ,GACtBa,KAAK,KACLC,KAAK,IACLC,YAAY,wBAIpB,6BAEI,4BAAQxB,UAAYC,IAAMwB,SAA1B,eAQDC,EAvEE,SAAC3B,GAGd,IAAI4B,EAAQ5B,EAAM6B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAA7B,GAAM,OAAI,kBAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAM0B,IAAK9B,EAAOG,GAAIA,GAAIH,EAAOG,QAEzG4B,EAAoBN,EAAMO,SAASH,KAAK,SAAAvB,GAAO,OAAI,kBAAC,EAAD,CAASA,QAASA,EAAQA,aAQjF,OACI,yBAAKR,UAAcC,IAAMkC,eAErB,yBAAKnC,UAAWC,IAAM6B,SAElB,yBAAK9B,UAAWC,IAAMmC,cAEjBP,GAIL,yBAAK7B,UAAcC,IAAMO,SAErB,kCAAQyB,EAAR,OAKR,yBAAKjC,UAAcC,IAAMoC,iBAErB,kBAAC1B,EAAD,CAAqBG,SA1BZ,SAACwB,GAEjBvC,EAAMwC,YAAYD,EAAOE,sB,gCCQnBC,sBAAQC,aArBD,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAKF,SAACe,GACtB,MAAO,CAEHJ,YAAa,SAACK,GAAsBD,EAAUE,YAAmBD,SAWFE,IAAxDL,CAA0Ef","file":"static/js/4.6bb0a481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrapper\":\"Dialogs_dialogWrapper__3lNfP\",\"dialogs\":\"Dialogs_dialogs__WKDFY\",\"active\":\"Dialogs_active__2yTNC\",\"dialog_items\":\"Dialogs_dialog_items__2gVYu\",\"dialog\":\"Dialogs_dialog__14Lv5\",\"messages\":\"Dialogs_messages__13ZwQ\",\"message\":\"Dialogs_message__2qn8s\",\"newMessageBlock\":\"Dialogs_newMessageBlock__2fNUS\",\"newMessagetext\":\"Dialogs_newMessagetext__21KQV\",\"sendBtn\":\"Dialogs_sendBtn__2CIgv\"};","import React from 'react';\r\nimport Class from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={Class.dialog + ' ' + Class.active}>\r\n            <NavLink  to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport Class from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={Class.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport Class from './Dialogs.module.css';\r\n\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './DialogMessage/DialogsMessage';\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst  Dialogs = (props) =>{\r\n\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogElements =  state.dialogs.map( dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} /> ) ;\r\n\r\n    let messagesElements =  state.messages.map( message => <Message message={message.message} />);\r\n\r\n     let addNewMessage = (values) => {\r\n\r\n         props.sendMessage(values.newMessageBody);\r\n\r\n     };\r\n\r\n    return (\r\n        <div className = { Class.dialogWrapper }>\r\n\r\n            <div className={Class.dialogs}>\r\n\r\n                <div className={Class.dialog_items}>\r\n\r\n                    {dialogElements}\r\n\r\n                </div>\r\n\r\n                <div className = { Class.message }>\r\n\r\n                    <div>  {messagesElements} </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className = { Class.newMessageBlock } >\r\n\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n\r\n                <Field\r\n                    component={Textarea}\r\n                    name = 'newMessageBody'\r\n                    className={ Class.newMessagetext }\r\n                    validate={[ required, maxLength50,]}\r\n                    cols=\"10\"\r\n                    rows=\"5\"\r\n                    placeholder='Enter your message'\r\n\r\n                />\r\n            </div>\r\n            <div>\r\n\r\n                <button className={ Class.sendBtn}  > Send </button>\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm);\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from './Dialogs';\r\n\r\nimport  {updateNewMessageBodyCreator, sendMessageCreator} from  '../../redux/dialogs-reducer';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        sendMessage: (sendMessageBody) => { dispatch( sendMessageCreator(sendMessageBody) ) },\r\n\r\n    }\r\n};\r\n\r\n\r\n//\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n//\r\n// const DialogsContainer = connect( mapStateToProps, mapDispatchToProps )(AuthRedirectComponent) ;\r\n\r\nexport default compose(connect( mapStateToProps, mapDispatchToProps ), withAuthRedirect)(Dialogs) ;"],"sourceRoot":""}